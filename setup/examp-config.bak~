;;-*-mode: lisp-*-

(add-to-list 'load-path "~/.elisp/org.git/lisp/")
(add-to-list 'load-path "~/.elisp/org.git/contrib/lisp")
(add-to-list 'load-path "~/.elisp/ess/lisp/")
(add-to-list 'load-path "~/.elisp/sunrise/")
(add-to-list 'load-path "~/.elisp/org-reveal/")
(add-to-list 'load-path "~/.elisp/ravel/")

;; setup babel languages
(org-babel-do-load-languages
 'org-babel-load-languages
 '((latex . t)
   (emacs-lisp . t)
   (org . t)
   (R . t)
   (shell . t)
   (python . t)))

;; font size, window height/width/placement
 (set-face-attribute 'default nil :height 105)
 (setq initial-frame-alist
      '((left . 0) (top . 20)
        (width . 120) (height . 57)))
 (tool-bar-mode 0)

(require 'ox-latex)
(require 'ox-html)
(require 'ox-beamer)
(require 'ox-md)
(require 'ox-odt)
(require 'ox-reveal)
(require 'ox-ravel)

(add-to-list 'org-latex-classes
             '("beamer"
               "\\documentclass\[presentation\]\{beamer\}"
               ("\\section\{%s\}" . "\\section*\{%s\}")
               ("\\subsection\{%s\}" . "\\subsection*\{%s\}")
               ("\\subsubsection\{%s\}" . "\\subsubsection*\{%s\}")))

;; for reveal or deck, I think we just add the dir to the presentation dir
(setq org-reveal-root "file:///home/jwhendy/installed/reveal.js")
;;(setq org-deck-directories "/home/jwhendy/.elisp/site-lisp/deck.js")
;;(setq org-deck-base-url "/home/jwhendy/.elisp/site-lisp/deck.js")


(setq org-latex-tables-booktabs t)

(setq org-src-preserve-indentation t)

(setq org-latex-table-scientific-notation nil)

;; org options
(setq org-directory "~/vault/personal/presentations/tcrug_org-mode")
(require 'org-inlinetask)
(require 'org-id)
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)

;; appearance tweaks
(setq org-hide-leading-stars t)
(setq org-blank-before-new-entry nil)
(setq org-link-file-path-type (quote absolute))

(require 'org-clock)
(setq org-clock-into-drawer t)
(global-set-key "\C-cr" 'org-resolve-clocks)
(global-set-key "\C-ce" 'org-set-effort)
(setq org-clock-out-remove-zero-time-clocks t)
(setq org-clock-out-when-done t)
(setq org-clock-persist 'history)
(org-clock-persistence-insinuate)

(setq org-log-into-drawer t)
(setq org-log-done (quote time))

(setq org-archive-location "./archive_2014.org::* From %s")
(setq org-archive-save-context-info
   (quote (time file itags olpath)))
(setq org-refile-targets (quote ((nil :maxlevel . 3)
                                 (org-agenda-files :maxlevel . 3))))
(setq org-refile-use-outline-path (quote file))

(setq org-todo-keywords '((sequence 
      "todo(t)" "next(n)" "wait(w@)" "|" 
      "done(d)" "cancelled(c@/@)")))

(global-set-key "\C-cc" 'org-capture)
(setq org-capture-templates
  '(("l" "log" entry (file+headline "./capture.org" "Log")
         "* %? \n%u " :clock-in t :clock-resume t)
    ("t" "task" entry (file+headline "./tcrug_org-mode-talk_2015-11.org" "todos")
         "* todo %? %^g\n%u" :prepend nil)
    ("c" "clock" entry (file+datetree "./clocking.org")
         "* %?\n%u" :clock-in t :clock-keep t)))

(setq org-agenda-skip-scheduled-if-done t)
(setq org-agenda-skip-deadline-if-done t)
(setq org-agenda-show-all-dates nil)
(setq org-deadline-warning-days 7)
(setq org-agenda-custom-commands 
    '(("w" "Agenda"
        ((agenda "" ((org-agenda-ndays 7)))

         (todo "next"
            ((org-agenda-overriding-header "Next Actions")))

         (todo "proj"
            ((org-agenda-overriding-header "Projects"))
             (org-agenda-sorting-strategy
                 '(todo-state-down category-keep)))))

      ("e" "Export"
        ((agenda "" ((org-agenda-ndays 7)))

         (todo "next"
            ((org-agenda-overriding-header "Next Actions")))))
))

(require 'ess-site)
(setq org-confirm-babel-evaluate nil)

;; use unique ids for links
(setq org-link-to-org-use-id 'create-if-interactive)

;; export options
(setq org-export-html-validation-link "")
(setq org-export-allow-bind-keywords t)

(global-set-key "\C-w" 'clipboard-kill-region)
(global-set-key "\M-w" 'clipboard-kill-ring-save)
(global-set-key "\C-y" 'clipboard-yank)

(setq-default fill-column 90)
(add-hook 'text-mode-hook 'turn-on-auto-fill)

;; sunrise-commander
(require 'sunrise-commander)
(require 'dired-x)
(setq dired-omit-files "^\\...+$")
(setq sr-history-length 20)
(setq sr-listing-switches "-al")
(setq sr-show-file-attributes nil)

(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "chromium")

