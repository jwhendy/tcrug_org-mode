;; adding the directories we created above to the path
(add-to-list 'load-path "../libs/org-mode/lisp/")
(add-to-list 'load-path "../libs/org-mode/contrib/lisp")
(add-to-list 'load-path "../libs/ESS/lisp/")
(add-to-list 'load-path "../libs/org-reveal/")
(add-to-list 'load-path "../libs/orgmode-accessories/")
(add-to-list 'load-path "../libs/org-present/")
(add-to-list 'load-path "../libs/ESS/")
(add-to-list 'load-path "../libs/")

;; these libraries are all related to exporting
(require 'ox-latex)
(require 'ox-html)
(require 'ox-beamer)
(require 'ox-md)
(require 'ox-odt)
(require 'ox-reveal)
(require 'ox-ravel)

;; ESS is needed for R code execution
(require 'ess-site)

;; we'll use sunrise-commmander for a text-based file manager
(require 'sunrise-commander)

;; these enable some cool Org-mode features turned off by default
(require 'org-inlinetask)
(require 'org-id)
(require 'org-clock)

;; this is required for any languages you plan to use
;; the full list of supported languages is here:
;; - http://orgmode.org/worg/org-contrib/babel/languages.html
(org-babel-do-load-languages
 'org-babel-load-languages
 '((latex . t)
   (emacs-lisp . t)
   (org . t)
   (R . t)
   (shell . t)
   (python . t)))

;; you may need this if your system defaults to python3 (like Arch)
(setq org-babel-python-command "python2")

;; I don't like the default look of emacs...
;; this makes a bigger window, font, sets window placement,
;; and turns off the graphical tool bar
(set-face-attribute 'default nil :height 105)
(setq initial-frame-alist
     '((left . 0) (top . 20)
       (width . 120) (height . 57)))
(tool-bar-mode 0)

;; you need this for beamer export
(add-to-list 'org-latex-classes
             '("beamer"
               "\\documentclass\[presentation\]\{beamer\}"
               ("\\section\{%s\}" . "\\section*\{%s\}")
               ("\\subsection\{%s\}" . "\\subsection*\{%s\}")
               ("\\subsubsection\{%s\}" . "\\subsubsection*\{%s\}")))

;; tell reveal where you're library lives
(setq org-reveal-root "file:///../libs/reveal.js")

;; sets Org-mode shortcuts that are commonly used
;; you need the clipboard ones to transfer copied/pasted
;; text between Emacs and your desktop environment
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cr" 'org-resolve-clocks)
(global-set-key "\C-ce" 'org-set-effort)
(global-set-key "\C-w" 'clipboard-kill-region)
(global-set-key "\M-w" 'clipboard-kill-ring-save)
(global-set-key "\C-y" 'clipboard-yank)
(global-set-key "\C-cc" 'org-capture)

;; hide multiple stars (looks more like an outline)
;; use absolute paths for file links (more robust)
(setq org-hide-leading-stars t)
(setq org-link-file-path-type (quote absolute))

;; I don't like capitals; this defines my own
;; todo states with lower case and in the order I want
(setq org-todo-keywords '((sequence 
      "todo(t)" "next(n)" "wait(w@)" "|" 
      "done(d)" "cancelled(c@/@)")))

;; this section has to do with appearance related tweaks
;; - booktabs for prettier latex tables
;; - don't fiddle with whitespace when exporting
;; - don't use xEn notation for big numbers in tables
;; - fill to 90 characters instead of 80 and turn on auto-fill
(setq org-latex-tables-booktabs t)
(setq org-src-preserve-indentation t)
(setq org-latex-table-scientific-notation nil)
(setq-default fill-column 90)
(add-hook 'text-mode-hook 'turn-on-auto-fill)

;; related to storing clock data (time on tasks)
;; and general meta data in headline drawers
(setq org-clock-into-drawer t)
(setq org-clock-out-remove-zero-time-clocks t)
(setq org-clock-out-when-done t)
(setq org-log-into-drawer t)
(setq org-log-done (quote time))

;; when refiling, this defines where Org-mode will look
;; for target files/headlines
(setq org-refile-targets (quote ((nil :maxlevel . 3)
                                 (org-agenda-files :maxlevel . 3))))
(setq org-refile-use-outline-path (quote file))

;; here's a common capture template I use
(setq org-capture-templates
  '(("l" "log" entry (file+headline "~/org/capture.org" "Log")
         "* %? \n%u " :clock-in t :clock-resume t)
    ("t" "task" entry (file+headline "~/org/projects.org" "Tasks")
         "* todo %? %^g\n%u" :prepend t)
    ("c" "clock" entry (file+datetree "~/org/clocking.org")
         "* %?\n%u" :clock-in t :clock-keep t)))

;; I like unique IDs; this creates them automatically if none exists
;; and you store a link to a headline (more robust than file/path based)
(setq org-link-to-org-use-id 'create-if-interactive)

;; things related to sunrise-commander
(setq dired-omit-files "^\\...+$")
(setq sr-history-length 20)
(setq sr-listing-switches "-al")
(setq sr-show-file-attributes nil)

;; use chromium instead of firefox for link opening
(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "chromium")

;; if you'd like to present with org-mode
(require 'org-present)
