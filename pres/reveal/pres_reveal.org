#+setupfile: "../../setup/setupfile.org"
#+title: R + Org-mode = awesome!
#+subtitle: Org-mode for science, reproducible research, organization
#+date: 2016 February (TCRUG meetup)
#+author: John Henderson
#+email: jw.hendy@gmail.com
#+reveal_hlevel: 1
#+reveal_theme: solarized
#+reveal_plugins: (highlight)
#+REVEAL_EXTRA_CSS: zenburn.css

#+begin_export html
<style type="text/css">
.reveal .slides { text-align: left; }
.reveal .slides .section>* { margin-left: 0; margin-right: 0; }
</style>
#+end_export


* Pre-warning

This presentation was /a lot/ harder than I thought it would be!
- Org-mode is great, but perhaps intimidating (emacs, setup...)
- Emacs itself can be quite a barrier to entry
- Background knowledge needed for feature =x= to make sense
- There's a gazillion features I would love to talk about but can't

* My approach

- Overview of some features
- Demo of an Org file
- Export with a few backends


* The life of a product developer

Stuff I do in the course of my work (probably not that different from you!):

** Direct								    :

- write up experimental plans
- do experiments
- collect/analyze data
- writeup reports/presentations
- share/collaborate with others

** Indirect

- record all sorts of info
- meeting notes
- manage todos
- store contact info/notes
- what to work on and when
- emails

* What the hell does emacs have to do with it?

Believe it or not, I /learned Emacs/ for =org-mode=. To date, it's the /only/ solution I'm
aware of that allows for all of the following in one place:
- notes
- todos/time stamping/deadlines
- tags/properties
- embedded code + execution
- export to multiple formats, with images, links, table of contents, automatically
  generated code blocks and/or results...

\pause

/Pretty cool!/

* Some competition
I've always been a note taker, as I like to refer to the past... you never know what
might be useful in the future! I tried all sorts of programs:

** recording work 					      :B_block:BMCOL:
   :PROPERTIES:
   :BEAMER_env: block
   :BEAMER_col: 0.5
   :END:
  - Word/Writer
  - [[http://zim-wiki.org/][zim]] (personal wiki)
  - [[https://evernote.com/][Evernote]]
  - [[http://tiddlywiki.com/][TiddlyWiki]]
  - [[https://www.rstudio.com/][RStudio]]?


** Todos 						      :B_block:BMCOL:
   :PROPERTIES:
   :BEAMER_env: block
   :BEAMER_col: 0.5
   :END:

- [[http://todotxt.com/][=todo.txt=]]
- [[https://en.wikipedia.org/wiki/Chandler_(software)][Chandler]]
- [[https://itunes.apple.com/us/app/igtd/id488595283?mt=8][iGTD]]
- [[http://tiddlywiki.com/][TiddlyWiki]]
- [[http://www.getontracks.org/][tracks]]

* Ok, so what is it?

=Org-mode= is a major mode for the Emacs text editor.
- it uses markup to allow for structuring

#+begin_example

,* ok, so what is it?                          # heading

=Org-mode= is a major mode for the Emacs text editor.
- it uses markup to allow for structuring     # list

#+end_example

* Markup

** heading
*** subheading

 - unordered list


 1. ordered list


 *bold*, /italic/, _underline_, footnote \(\footnote[frame]{Footnote goes here}\),
 superscripts^x and subscripts_y, [[https://www.google.com][link]]

* Markup

#+begin_example

,* heading
,** subheading
- unordered list
1. ordered list
*bold*, /italic/, _underline_, footnotes[fn:1],
superscripts^x and subscripts_y,  [[https://www.google.com][link]] 

,* Footnotes
Footnote goes here [fn:1]

#+end_example

* Todos

** todo do something
** todo [1/2] meta task 					       :proj:
   - [X] thing 1
   - [ ] thing 2
** done another thing

* Todos

#+begin_example

,** todo do something
,** todo [1/2] meta task 					       :proj:
   - [X] thing 1
   - [ ] thing 2
,** done another thing


#+end_example

* Time stamps

Can add further information to notes (logs, deadlines, etc.)

** Notes about meeting with Dude
[2016-01-18 Mon]

Did blah blah blah

** todo do something
   DEADLINE: <2016-01-21 Thu>


* Time stamps

Can add further information to notes (logs, deadlines, etc.)

#+begin_example

,** Notes about meeting with Dude
[2016-01-18 Mon]

Did blah blah blah

,** todo do something
   DEADLINE: <2016-01-21 Thu>



#+end_example


* Tables/spreadsheet!

- Formulas: =$= refers to column; =@= refers to row
- Emacs =calc= has format specifiers built in

#+tblname: dat_1
| id | x |     y |
|----+---+-------|
| a  | 2 |  1.33 |
| b  | 4 |  5.33 |
| c  | 6 | 12.00 |
#+TBLFM: $3=$2^2/3; %.2f

* Tables/spreadsheet!

#+begin_example

#+tblname: dat_1
| *id* | *x* | *y* |
|------+-----+-----|
| a    |   2 |   4 |
| b    |   4 |  16 |
| c    |   6 |  36 |
#+TBLFM: $3=$2^2/3; %.2f

#+end_example

* Inline code

I had src_R[:session r]{x <- 10; x} apples and I ate src_R[:session r]{y <- 4; y}. I must
have src_R[:session r]{x - y} {{{results(=TRUE=)}}} left.

* Inline source code

#+begin_example

I had src_R[:session r]{x <- 10; x} apples and I
ate src_R[:session r]{y <- 4; y}. I must have
src_R[:session r]{x - y} left.

#+end_example


* Source blocks

#+begin_example 

,#+name: code-ex1
,#+header: data = dat_1
,#+begin_src R :session r :exports results :results output

library(ggplot2)
sum(data$y)

,#+end_src

#+end_example

#+header: :var data = dat_1
#+begin_src R :session r :exports results :results output :eval no

sum(data$y)

#+end_src

#+RESULTS:
: [1] 18.66


* Plotting

#+name: dat1_plot
#+header: :var data = dat_1 :file ../../plots/dat1_scatter.png :width 1600 :height 900 :res 200
#+begin_src R :session r :exports both :results output graphics :eval no

p <- ggplot(data, aes(x = x, y = y, colour = id))
p + geom_point(size = 4) + theme_bw()

#+end_src

#+begin_center
#+attr_html: :height 500px
#+RESULTS: dat1_plot
[[file:../../plots/dat1_scatter.png]]
#+end_center

* Plotting

#+begin_example

#+name: dat1_plot
#+header: :var data = dat_1 :file ../../plots/dat1_scatter.png 
#+header: :width 1600 :height 900 :res 200
#+begin_src R :session r :exports both :results output graphics

p <- ggplot(data, aes(x = x, y = y, colour = id))
p + geom_point(size = 4) + theme_bw()

#+end_src

#+end_example

* Formatting results

#+begin_example

#+begin_center
#+attr_html: :height 600px
#+RESULTS: dat1_plot
[[file:../../plots/dat1_scatter.png]]
#+end_center

#+end_example

* Agenda

Like a search engine for your files
- Extracts todos, time stamps, tags, etc.
- Can apply filters (keywords + the above)
- Create custom views (only todo keyword =x=)


* 

#+latex: \vspace{0.4\textheight}

#+begin_center
Demo time!
#+end_center

* Some tips

If you find this intriguing but intimidating, start small
- Start journaling in Org
- Track todos
- Edit a text file in Emacs
- Create one document via export
- Only customize and learn new features as needed


Ask for help
- The mailing list is awesome!
- SO has quite a few Org questions

* Extra stuff

- Manage contacts with [[https://julien.danjou.info/projects/emacs-packages#org-contacts][org-contacts]]
- Text based file manager: [[http://www.emacswiki.org/emacs/Sunrise_Commander][Sunrise Commander]]
- A [[http://www.gnu.org/software/emacs/tour/][tour of Emacs]]
- [[http://www.taskjuggler.org/][Taskjuggler]], an Org-mode compatible project planner
- Draw in \LaTeX with [[http://www.texample.net/tikz/][TikZ/pgf]]
- Beamer [[https://github.com/matze/mtheme][metropolis theme]] (beamer that doesn't look like it)

* Learning Org

- Org-mode manual: http://orgmode.org/manual/
- Worg, the Org-mode wiki: http://orgmode.org/worg/
- Org-mode mailing lsit: http://orgmode.org/community.html
- Compact Org-mode guide: http://orgmode.org/guide/
- Org-mode shortcut reference card: http://orgmode.org/orgcard.pdf
- Brent Hanson's personal collection of settings, tips, and tricks: http://doc.norang.ca/org-mode.html

* References
- Schulte, Eric; Davison, Dan; Dye, Thomas S; Dominik, Carsten. /A Multi-Language Computing Environment for Literate Programming and Reproducible Research/. 
  Journal of Statistical Software. http://www.jstatsoft.org/article/view/v046i03

- Dye, Thomas S. /Structure and Growth of the Leeward Kohala Field System: An
  Analysis with Directed Graphs/. PlosONE. http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0102431 
* Examples

- [[https://github.com/jwhendy/devFest-shiny_2015][2015 Google Developer Fest presentation]]
- [[https://github.com/jwhendy/devFest-geo][2014 Google Developer Fest presentation]]
- [[https://drive.google.com/open?id=0BzQupOSnvw08anh6c3FwaGlHWVk][Hobby analysis of a multi-level marketing company]]
